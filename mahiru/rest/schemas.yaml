openapi: "3.0.0"

info:
    version: 0.1.0
    title: EFDDM Site external API

components:
  schemas:
    # Decided not to use OpenAPI polymorphism support, this is simpler
    # and only marginally more typing, and we're doing serialisation by
    # hand anyway.
    InAssetCollection:
      type: object
      required:
        - type
        - signature
        - asset
        - collection
      properties:
        type:
          description: Type of rule, always 'InAssetCollection'
          type: string
        signature:
          description: BASE64url serialised signature
          type: string
        asset:
          description: Id of the asset that is in the collection
          type: string
        collection:
          description: Collection the asset is in
          type: string

    InPartyCollection:
      type: object
      required:
        - type
        - signature
        - party
        - collection
      properties:
        type:
          description: Type of rule, always 'InPartyCollection'
          type: string
        signature:
          description: BASE64url serialised signature
          type: string
        party:
          description: Id of the party that is in the collection
          type: string
        collection:
          description: Collection the party is in
          type: string

    MayAccess:
      type: object
      required:
        - type
        - signature
        - site
        - asset
      properties:
        type:
          description: Type of rule, always 'MayAccess'
          type: string
        signature:
          description: BASE64url serialised signature
          type: string
        site:
          description: Id of the site that may access the asset
          type: string
        asset:
          description: Asset that may be accessed
          type: string

    MayUse:
      type: object
      required:
        - type
        - signature
        - party
        - asset
        - conditions
      properties:
        type:
          description: Type of rule, always 'MayUse'
          type: string
        signature:
          description: BASE64url serialised signature
          type: string
        party:
          description: Id of the site that may access the asset
          type: string
        asset:
          description: Asset that may be accessed
          type: string
        conditions:
          description: Conditions of use
          type: string

    ResultOfIn:
      type: object
      required:
        - type
        - signature
        - data_asset
        - compute_asset
        - output
        - collection
      properties:
        type:
          description: >-
            Type of rule, always 'ResultOfDataIn' or 'ResultOfComputeIn'
        signature:
          description: BASE64url serialised signature
          type: string
        data_asset:
          description: Id of the data asset used as input
          type: string
        compute_asset:
          description: Id of the compute asset used to processs it
          type: string
        output:
          description: Name of the output the rule governs.
          type: string
        collection:
          description: Id of the collection the result is in
          type: string

    Rule:
      oneOf:
        - $ref: '#/components/schemas/InAssetCollection'
        - $ref: '#/components/schemas/InPartyCollection'
        - $ref: '#/components/schemas/MayAccess'
        - $ref: '#/components/schemas/MayUse'
        - $ref: '#/components/schemas/ResultOfIn'

    PolicyUpdate:
      type: object
      required:
        - from_version
        - to_version
        - valid_until
        - created
        - deleted
      properties:
        from_version:
          description: Version this update applies to
          type: integer
        to_version:
          description: Version this update updates to
          type: integer
        valid_until:
          description: Time until which the new version is valid
          type: string
          format: date-time
        created:
          description: Objects that were created since the last version
          type: array
          items:
            oneOf:
              - "$ref": "#/components/schemas/InAssetCollection"
              - "$ref": "#/components/schemas/InPartyCollection"
              - "$ref": "#/components/schemas/MayAccess"
              - "$ref": "#/components/schemas/MayUse"
              - "$ref": "#/components/schemas/ResultOfIn"
        deleted:
          description: Objects that were deleted since the last version
          type: array
          items:
            oneOf:
              - "$ref": "#/components/schemas/InAssetCollection"
              - "$ref": "#/components/schemas/InPartyCollection"
              - "$ref": "#/components/schemas/MayAccess"
              - "$ref": "#/components/schemas/MayUse"
              - "$ref": "#/components/schemas/ResultOfIn"

    ComputeMetadata:
      type: object
      required:
        - output_base
      properties:
        output_base:
          description: Assets to use as base images for outputs
          type: object
          additionalProperties:
            type: string

    DataMetadata:
      type: object
      required:
        - job
        - item
      properties:
        job:
          description: A minimal job that will generate this asset
          type: object
          schema:
            "$ref": "#/components/schemas/Job"
        item:
          description: >-
            An item in the job's workflow corresponding to this asset
          type: string

    Metadata:
      oneOf:
        - $ref: '#/components/schemas/ComputeMetadata'
        - $ref: '#/components/schemas/DataMetadata'

    Asset:
      type: object
      required:
        - id
        - kind
        - data
        - image_location
        - metadata
      properties:
        id:
          description: Identifier for this asset
          type: string
        kind:
          description: 'Kind of asset ("compute" or "data")'
          type: string
        data:
          description: Data related to the asset
          # This is currently null for compute objects, and the only way I
          # could get it to match was with this double nullable
          # declaration...
          anyOf:
            - type: "number"
            - type: array
              items:
                type: number
              nullable: true
          nullable: true
        image_location:
          description: URL to download the image from
          type: string
          nullable: true
        metadata:
          type: object
          schema:
            "$ref": "#/components/schemas/Metadata"

    ExecutionRequest:
      type: object
      required:
        - job
        - plan
      properties:
        job:
          description: Job to run a part of
          type: object
          schema:
            "$ref": "#/components/schemas/Job"
        plan:
          description: Execution plan for the job.
          type: object
          schema:
            "$ref": "#/components/schemas/Plan"

    Job:
      type: object
      required:
        - workflow
        - inputs
      properties:
        workflow:
          description: Workflow to run a part of
          type: object
          schema:
            "$ref": "#/components/schemas/Workflow"
        inputs:
          description: Map of workflow inputs to asset ids
          type: object
          additionalProperties:
            type: string

    Workflow:
      type: object
      required:
        - inputs
        - outputs
        - steps
      properties:
        inputs:
          description: Names of the workflow's inputs
          type: array
          items:
            type: string
        outputs:
          description: >-
            Map of workflow output names to corresponding step output names
            of the form step.output
          type: object
          additionalProperties:
            type: string
        steps:
          description: The steps making up the workflow
          type: array
          items:
            type: object
            schema:
              "$ref": "#/components/schemas/WorkflowStep"

    WorkflowStep:
      type: object
      required:
        - name
        - inputs
        - outputs
        - compute_asset_id
      properties:
        name:
          description: Name of the step, so it can be referred to
          type: string
        inputs:
          description: >-
            Map of step parameter names to references to their sources
          type: object
          additionalProperties:
            type: string
        outputs:
          description: >-
            Map of step output names to references to their base assets
          type: object
          additionalProperties:
            type: string
            nullable: true
        compute_asset_id:
          description: Id of the compute asset used by this step
          type: string

    Plan:
      type: object
      required:
        - step_sites
      properties:
        step_sites:
          description: Maps step names to the site to run them at
          type: object
          additionalProperties:
            type: string

    JobResult:
      type: object
      required:
        - job
        - plan
        - is_done
        - outputs
      properties:
        job:
          description: The job as submitted
          type: object
          schema:
            "$ref": "#/components/schemas/Job"
        plan:
          description: The plan according to which the job is executed
          type: object
          schema:
            "$ref": "#/components/schemas/Plan"
        is_done:
          description: Whether the job has finished running
          type: boolean
        outputs:
          description: The job's outputs by name
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/Asset"

    # Definitions for the registry
    Party:
      type: object
      required:
        - id
        - namespace
        - public_key
      properties:
        id:
          description: Identifier of the party
          type: string
        namespace:
          description: The party's namespace
          type: string
        public_key:
          description: The party's PEM-encoded RSA public key
          type: string

    Site:
      type: object
      required:
        - id
        - owner_id
        - admin_id
        - endpoint
        - has_runner
        - has_store
        - has_policies
      properties:
        id:
          description: Identifier of the site
          type: string
        owner_id:
          description: Identifier of the party which owns this site
          type: string
        admin_id:
          description: Identifier of the party which administrates this site
          type: string
        endpoint:
          description: >-
            REST endpoint at which the site may be contacted.
          type: string
          format: uri
        has_runner:
          description: Whether the site has a runner
          type: boolean
        has_store:
          description: Whether the site has a store
          type: boolean
        has_policies:
          description: Whether the site serves policies
          type: boolean

    RegistryUpdate:
      type: object
      required:
        - from_version
        - to_version
        - valid_until
        - created
        - deleted
      properties:
        from_version:
          description: Version this update applies to
          type: integer
        to_version:
          description: Version this update updates to
          type: integer
        valid_until:
          description: Time until which the new version is valid
          type: string
          format: date-time
        created:
          description: Objects that were created since the last version
          type: array
          items:
            oneOf:
              - "$ref": "#/components/schemas/Party"
              - "$ref": "#/components/schemas/Site"
        deleted:
          description: Objects that were deleted since the last version
          type: array
          items:
            oneOf:
              - "$ref": "#/components/schemas/Party"
              - "$ref": "#/components/schemas/Site"

    WireGuardEndpoint:
      type: object
      required:
        - address
        - port
        - key
      properties:
        address:
          description: IP address of the endpoint to connect to
          type: string
        port:
          description: Port of the endpoint to connect to
          type: integer
        key:
          description: WireGuard key of the endpoint to connect to
          type: string

    WireGuardConnectionRequest:
      type: object
      required:
        - net
        - endpoint
      properties:
        net:
          description: VPN network id to use for the connection
          type: integer
        endpoint:
          description: WireGuard endpoint for the client side
          type: object
          schema:
            "$ref": "#/components/schemas/WireGuardEndpoint"

    ConnectionRequest:
      oneOf:
        - $ref: '#/components/schemas/WireGuardConnectionRequest'

    WireGuardConnectionInfo:
      type: object
      required:
        - conn_id
        - endpoint
      properties:
        conn_id:
          description: Connection id, a URL identifying this connection.
          type: string
          format: uri
        endpoint:
          description: WireGuard endpoint for the server side
          type: object
          schema:
            "$ref": "#/components/schemas/WireGuardEndpoint"

    ConnectionInfo:
      oneOf:
        - $ref: '#/components/schemas/WireGuardConnectionInfo'
