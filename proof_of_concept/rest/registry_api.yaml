openapi: "3.0.0"

info:
    version: 0.1.0
    title: EFDDM Registry

paths:
  /parties:
    post:
      summary: Register a party
      operationId: registerParty
      requestBody:
        description: Description of the party to register
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Party"
        required: true
      responses:
        "201":
          description: Successfully registered the party
          content:
            text/plain:
              schema:
                description: A message signalling success
                type: string
        "400":
          description: The request was not formatted correctly
          content:
            text/plain:
              schema:
                description: An error message
                type: string
        "409":
          description: A party with this id was already registered
          content:
            text/plain:
              schema:
                description: An error message
                type: string
        default:
          description: A technical problem was encountered
          content:
            text/plain:
              schema:
                type: string

  /parties/{id}:
    delete:
      summary: Deregister a party
      operationId: deregisterParty
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the asset to deregister
          schema:
            type: string
      responses:
        "200":
          description: Successfully deregistered the party
          content:
            text/plain:
              schema:
                description: A message signalling succes
                type: string
        "404":
          description: The party was not found
          content:
            text/plain:
              schema:
                description: A message signalling failure
                type: string
        default:
          description: A technical problem was encountered
          content:
            text/plain:
              schema:
                type: string

  /sites:
    post:
      summary: Register a site
      operationId: registerSite
      requestBody:
        description: Description of the site to register
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Site"
        required: true
      responses:
        "201":
          description: Successfully registered the site
          content:
            text/plain:
              schema:
                description: A message signalling success
                type: string
        "400":
          description: The request was not formatted correctly
          content:
            text/plain:
              schema:
                description: An error message
                type: string
        "409":
          description: A site with this id was already registered
          content:
            text/plain:
              schema:
                description: An error message
                type: string
        default:
          description: A technical problem was encountered
          content:
            text/plain:
              schema:
                type: string

  /sites/{id}:
    delete:
      summary: Deregister a site
      operationId: deregisterSite
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the site to deregister
          schema:
            type: string
      responses:
        "200":
          description: Successfully deregistered the site
          content:
            text/plain:
              schema:
                description: A message signalling succes
                type: string
        "404":
          description: The site was not found
          content:
            text/plain:
              schema:
                description: A message signalling failure
                type: string
        default:
          description: A technical problem was encountered
          content:
            text/plain:
              schema:
                type: string

  /updates:
    get:
      summary: Get registry updates
      operationId: getUpdates
      parameters:
        - name: from_version
          in: query
          description: >-
            Current version of the replica the update is for. If omitted,
            returns an update from the beginning.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: A replica update starting from the given version.
          context:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegistryUpdate"
        "400":
          description: The request was not formatted correctly
          content:
            text/plain:
              schema:
                description: An error message
                type: string
        default:
          description: A technical problem was encountered
          content:
            text/plain:
              schema:
                type: string

$ref: "./schemas.yaml"

